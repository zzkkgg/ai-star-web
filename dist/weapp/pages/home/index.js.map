{"version":3,"file":"pages/home/index.js","sources":["webpack:///._src_pages_home_index.jsx","webpack:///._src_assets_images_icons_ai.png","webpack:///./src/pages/home/index.jsx?eceb","webpack:///._src_pages_home_index.less"],"sourcesContent":["import request from '@/utils/request';\r\nimport { navigateTo } from '@tarojs/taro';\r\nimport { useEffect, useState } from 'react';\r\nimport { View, Image, Text, ScrollView } from '@tarojs/components';\r\nimport InfiniteScrollHolder from '@/components/InfiniteScrollHolder';\r\nimport aiImg from '@/assets/images/icons/ai.png';\r\nimport './index.less';\r\n\r\nexport default function Home() {\r\n    const [current, setCurrent] = useState(1);\r\n    const [loading, setLoading] = useState(true);\r\n    const [pageTotal, setPageTotal] = useState(0);\r\n    const [bannerUrl, setBannerUrl] = useState('');\r\n    const [courseList, setCourseList] = useState(null);\r\n    const [courseTypeList, setCourseTypeList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCourseTypeList();\r\n        fetchCourseList();\r\n        fetchBanner();\r\n    }, []);\r\n    function fetchBanner() {\r\n        request.get({\r\n            url: '/api/banner/list',\r\n            data: {\r\n                bannerType: 0,\r\n                page: 1,\r\n                size: 5,\r\n            },\r\n        }).then(({ data }) => {\r\n            if (Array.isArray(data?.list)) {\r\n                setBannerUrl(data.list[0].bannerImage);\r\n            }\r\n        });\r\n    }\r\n    function fetchCourseTypeList() {\r\n        request.get({\r\n            url: '/api/course/typeList',\r\n            data: {\r\n                page: 1,\r\n                size: 5,\r\n            },\r\n        }).then(({ data }) => {\r\n            setCourseTypeList(data?.list);\r\n        });\r\n    }\r\n    function fetchCourseList() {\r\n        setLoading(true);\r\n        request.get({\r\n            url: '/api/course/list',\r\n            data: {\r\n                page: current,\r\n                size: 10,\r\n            },\r\n        }).then(({ data }) => {\r\n            setPageTotal(data.pages);\r\n            setCourseList((courseList || []).concat(data.list || []));\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    useEffect(fetchCourseList, [current]);\r\n\r\n    function hasMore() {\r\n        if (courseList == null || current < pageTotal) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function onLoadMore() {\r\n        if (!hasMore() || loading) {\r\n            return;\r\n        }\r\n        setCurrent(current + 1);\r\n    }\r\n\r\n    return (\r\n        <View className=\"home bg-gray\">\r\n            <View className=\"container full-height\">\r\n                {\r\n                    bannerUrl && (\r\n                        <Image\r\n                            src={bannerUrl}\r\n                            className=\"banner\"\r\n                            mode=\"heightFix\"\r\n                        />\r\n                    )\r\n                }\r\n                <View className=\"hot-course-list font-size-14\">\r\n                    {\r\n                        courseTypeList?.map(({ typeId, typeName, typeThumb }) => {\r\n                            return (\r\n                                <View\r\n                                    key={typeId}\r\n                                    className=\"hot-course-item align-center\"\r\n                                    onClick={() => {\r\n                                        navigateTo({\r\n                                            url: `/pages/courseGroup/index?typeId=${typeId}`,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <Image\r\n                                        mode=\"widthFix\"\r\n                                        className=\"course-icon\"\r\n                                        src={typeThumb || aiImg}\r\n                                    />\r\n                                    <View className=\"font-size-12 m-t-5\">{typeName}</View>\r\n                                </View>\r\n                            );\r\n                        })\r\n                    }\r\n                </View>\r\n                <View className=\"banner-holder m-b-20\" />\r\n                <View className=\"font-size-14 m-b-10\">\r\n                    <Text className=\"m-l-10\">全部</Text>\r\n                </View>\r\n                <View className=\"course-box\">\r\n                    <ScrollView\r\n                        scrollY\r\n                        onScrollToLower={onLoadMore}\r\n                    >\r\n                        <View className=\"course-list\">\r\n                            {\r\n                                courseList?.map(({ courseId, courseThumb, courseTitle }) => {\r\n                                    return (\r\n                                        <View\r\n                                            key={courseId}\r\n                                            onClick={() => {\r\n                                                navigateTo({\r\n                                                    url: `/pages/courseDetail/index?id=${courseId}`,\r\n                                                });\r\n                                            }}\r\n                                            className=\"course-card align-center\"\r\n                                        >\r\n                                            <View className=\"thumbnail-box\">\r\n                                                <Image\r\n                                                    src={courseThumb}\r\n                                                    mode=\"widthFix\"\r\n                                                    className=\"image\"\r\n                                                />\r\n                                            </View>\r\n                                            <View className=\"title font-size-14 m-t-5\">{courseTitle}</View>\r\n                                        </View>\r\n                                    );\r\n                                })\r\n                            }\r\n                            <InfiniteScrollHolder className=\"infinite-load\"  hasMore={hasMore()} />\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n","module.exports = __webpack_public_path__ + \"assets/images/icons/ai.png\";","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"爱思塔编程\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/home/index', {root:{cn:[]}}, config || {}))\n\n\n","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;AC1JA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;;;;A","sourceRoot":""}